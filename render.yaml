envVarGroups:
  - name: shared-env
    envVars:
      - key: PERPLEXITY_API_KEY
        sync: false
      - key: OPENAI_API_KEY
        sync: false
      - key: HUGGINGFACE_API_KEY
        sync: false
      - key: DATABASE_URL
        sync: false
      - key: AWS_ACCESS_KEY_ID
        sync: false
      - key: AWS_SECRET_ACCESS_KEY
        sync: false
      - key: AWS_REGION
        value: us-east-1
      - key: S3_BUCKET_NAME
        value: liefeed-images
      - key: SES_SENDER
        value: newsletter@liefeed.com
      - key: SES_SENDER_CERT
        value: certificates@liefeed.com
      - key: FACEBOOK_PAGE_ID
        value: "588785644323565"
      - key: FACEBOOK_PAGE_TOKEN
        sync: false
      - key: FACEBOOK_CAPI_TOKEN
        sync: false  
      - key: X_API_KEY
        sync: false
      - key: X_API_SECRET
        sync: false
      - key: X_BEARER_TOKEN
        sync: false
      - key: X_ACCESS_TOKEN
        sync: false
      - key: X_ACCESS_TOKEN_SECRET
        sync: false
      - key: SECRET_KEY
        sync: false
      - key: CONTACT_RECEIVER_EMAIL
        value: editor@liefeed.com
      - key: INBOUND_BUCKET_NAME
        value: liefeed-inbound-emails
      - key: INBOX_ADMIN_PASSWORD
        sync: false
      - key: FACEBOOK_PIXEL_ID
        sync: false
      - key: MUSIC_TRACKS
        value: funny_music.mp3,track1.mp3,track2.mp3,track3.mp3,track4.mp3
      - key: LEONARDO_API_KEY
        sync: false
      - key: REOON_API_KEY
        sync: false

services:
  - type: web
    name: liefeed
    runtime: docker
    plan: standard
    autoDeploy: true
    envVars:
      - fromGroup: shared-env

  - type: cron
    name: post-to-facebook
    runtime: docker
    plan: starter
    autoDeploy: true   
    schedule: "0 */6 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/scheduled_job.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: post-to-facebook

  - type: cron
    name: send-newsletter
    runtime: docker
    plan: starter
    autoDeploy: true   
    schedule: "0 10 * * 1,3,5"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/newsletter_sender.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-newsletter

  - type: cron
    name: post-meme
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 */12 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/scheduled_meme_job.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: post-meme


  - type: cron
    name: post-reel-to-facebook
    runtime: docker
    plan: starter
    autoDeploy: true   
    schedule: "30 10 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/scheduled_reel_job.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: post-reel-to-facebook

  - type: cron
    name: validate-new-signups
    runtime: docker
    plan: starter
    autoDeploy: true   
    schedule: "59 23 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/validate_new_signups.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: validate-new-signups

  - type: cron
    name: trigger-daily-reel
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 10 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/trigger_reel.py
        - utils                         # if needed
        - config                        # if needed
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: trigger-daily-reel

  - type: cron
    name: subscriber-summary
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 2,10,18 * * *"
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - utils/email/send_subscriber_summary.py
        - utils/email/email_sender.py
        - utils/database/db.py
        - cron/send_subscriber_summary_runner.py
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: subscriber-summary

  - type: cron
    name: send_start_quiz_followups
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 11 * * *"  # runs daily at 11:00 AM UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_start_quiz_followups.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-start-quiz-followups

  - type: cron
    name: send-level2-retakes
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 12 * * *"  # Runs daily at 12:00 UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_level2_retakes.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-level2-retakes

  - type: cron
    name: send-level3-invites
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 14 * * *"  # Daily at 14:00 UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_level3_invites.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-level3-invites

  - type: cron
    name: send-newsletter-optin-invite
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 15 * * *"  # Daily at 15:00 UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_newsletter_optin_invite.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-newsletter-optin-invite

  - type: cron
    name: send-quiz2-nudges
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 15 * * *"  # Daily at 15:00 UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_quiz2_nudges.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-quiz2-nudges

  - type: cron
    name: send-newsletter-optin-nudge
    runtime: docker
    plan: starter
    autoDeploy: true
    schedule: "0 16 * * *"  # Daily at 16:00 UTC
    buildCommand: pip install -r requirements.txt
    buildFilter:
      paths:
        - Dockerfile
        - render.yaml
        - requirements.txt
        - cron/send_newsletter_optin_nudge.py
        - utils
        - config
    envVars:
      - fromGroup: shared-env
      - key: RUN_TARGET
        value: send-newsletter-optin-nudge

